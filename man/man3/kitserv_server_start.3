.Dd December 21, 2023
.Os LOCAL
.Dt KITSERV_SERVER_START 3 LOCAL
.Sh NAME
.Nm kitserv_server_start
.Nd start a Kitserv server
.Sh LIBRARY
.Lb libkitserv
.Sh SYNOPSIS
.In kitserv.h
.Bd -literal
struct kitserv_config {
    char* port_string;
    int num_workers;
    int num_slots;
    bool bind_ipv4;
    bool bind_ipv6;
    bool silent_mode;
    struct kitserv_request_context* http_root_context;
    struct kitserv_api_tree* api_tree;
};
.Ed
.Pp
.Bd -literal
struct kitserv_request_context {
    char* root;
    char* root_fallback;
    char* fallback;
    bool use_http_append_fallback;
};
.Ed
.Pp
.Bd -literal
struct kitserv_api_entry {
    char* prefix;
    int prefix_length;
    enum kitserv_http_method method;
    kitserv_api_handler_t handler;
    bool finishes_path;
};
.Ed
.Pp
.Bd -literal
struct kitserv_api_tree {
    char* prefix;
    int prefix_length;
    struct kitserv_api_tree* subtrees;
    struct kitserv_api_entry* entries;
    int num_subtrees;
    int num_entries;
};
.Ed
.Pp
.Ft void
.Fn kitserv_server_start "struct kitserv_config*"
.Sh DESCRIPTION
.Pp
The
.Fn kitserv_server_start
function initializes and starts an instance of the Kitserv web server.
.Pp
.Vt struct kitserv_config
contains the configuration for this instance. The entries of that struct
are defined as follows:
.in +4n
.Bl -tag -width Ds
.It Fa char* port_string
Port to run on, as a string (e.g. "8012").
.It Fa int num_workers
Number of worker threads to use.
.It Fa int num_slots
Number of connection slots to use. Kitserv preallocates these slots,
this is a hard limit.
.It Fa bool bind_ipv4
Bind IPv4 only.
.It Fa bool bind_ipv6
Bind IPv6, using dual binding if enabled. IPv6 binding happens before
IPv4 binding.
.It Fa bool silent_mode
Disable non-catastrophic error prints and logging. Not all printouts are
removed, only logging and most recoverable errors.
.It Fa struct kitserv_request_context* http_root_context;
Default web context to serve from.
.It Fa struct kitserv_api_tree* api_tree
API endpoint tree to serve API requests into. Use NULL for this field
to disable the API entirely.
.in -4n
.El
.Pp
.Vt struct kitserv_request_context
Defines a static file server context. This includes the main web
directory and fallback handling. The entries of that struct are
defined as follows:
.in +4n
.Bl -tag -width Ds
.It Fa char* root
Root directory to serve files from.
.It Fa char* root_fallback
Fallback resource to serve when the request path is /. This location
is relative to the main root. Example: "/index.html"
.It Fa char* fallback
Fallback resource to serve when the request path does not exist. This
location is relative to the main root. Example: "/200.html"
.It Fa bool use_http_append_fallback
Retry request with .html appended if the original path does not
exist. Example: "/public" -> "/public.html"
.in -4n
.El
.Pp
.Vt struct kitserv_api_tree
defines API trees and subtrees for parsing.
.Vt struct kitserv_api_entry
defines an API endpoint. When a request arrives, Kitserv splits the path
on / characters and iterates the tree. Each subtree or entry contains a
.Fa prefix
field which is compared against the current path element. If an entry's
prefix and HTTP request method matches, the API handler function is
called. The handler function takes a
.Fa data
argument, which can be preserved across calls (if set by the handler).
.Pp
The fields of
.Vt struct kitserv_api_tree
are defined as follows:
.in +4n
.Bl -tag -width Ds
.It Fa char* prefix
Prefix of this subtree. Includes no / characters. The API tree root has
no prefix, it is always iterated.
.It Fa int prefix_length
Length of this subtree's prefix.
.It Fa struct kitserv_api_tree* subtrees
Array of subtrees for this tree.
.It Fa struct kitserv_api_entry* entries
Array of API endpoints for this tree.
.It Fa int num_subtrees
Number of subtrees in array.
.It Fa int num_entries
Number of endpoints in array.
.El
.in -4n
.Pp
The fields of
.Vt struct kitserv_api_entry
are defined as follows:
.in +4n
.Bl -tag -width Ds
.It Fa char* prefix
Prefix of this subtree. Includes no / characters.
.It Fa int prefix_length
Length of this subtree's prefix.
.It Fa enum kitserv_http_method method
HTTP method accepted by this endpoint.
.Dv HTTP_GET
and
.Dv HTTP_HEAD
are both serviced by endpoints declared as
.Dv HTTP_GET
do not use
.Dv HTTP_HEAD
directly here.
.It Fa kitserv_api_handler_t handler
Handler function to do API parsing. This function will be repeatedly called
until the response status is set.
.It Fa bool finishes_path
If true, do not allow any additional path elements. For example,
"/api/login/extra" will not be entered for "/api/login" if this is true. (Note
that the entry itself would actually have the prefix "login", with its parent
tree having "api").
.El
.in -4n
.Sh SEE ALSO
.Xr kitserv 3
.Sh COPYRIGHT
Copyright (c) 2023 Jmcgee1125.
.Pp
Kitserv is licensed under the GNU Affero GPL v3. You are free to redistribute
and modify this code as you see fit, provided that you make the source code
freely available under these terms.
